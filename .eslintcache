[{"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\index.js":"1","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\App.js":"2","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\reportWebVitals.js":"3","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\NavBar.js":"4","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Links.js":"5","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Home.js":"6","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Favorites.js":"7","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Search.js":"8","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Favorite.js":"9","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\CardView.js":"10","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\SnackBar.js":"11","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\LoadingSpinner.js":"12","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\utils.js":"13"},{"size":517,"mtime":1609374497635,"results":"14","hashOfConfig":"15"},{"size":860,"mtime":1609880341736,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1609374497650,"results":"17","hashOfConfig":"15"},{"size":3621,"mtime":1609880772084,"results":"18","hashOfConfig":"15"},{"size":1374,"mtime":1609611603900,"results":"19","hashOfConfig":"15"},{"size":876,"mtime":1609881203795,"results":"20","hashOfConfig":"15"},{"size":900,"mtime":1609880440208,"results":"21","hashOfConfig":"15"},{"size":1585,"mtime":1609648520168,"results":"22","hashOfConfig":"15"},{"size":927,"mtime":1609880448076,"results":"23","hashOfConfig":"15"},{"size":5567,"mtime":1609882031561,"results":"24","hashOfConfig":"15"},{"size":1158,"mtime":1609614113642,"results":"25","hashOfConfig":"15"},{"size":539,"mtime":1609585631658,"results":"26","hashOfConfig":"15"},{"size":217,"mtime":1609880106381,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"tjhvht",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\index.js",[],["57","58"],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\App.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\reportWebVitals.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\NavBar.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Links.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Home.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Favorites.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Search.js",["59"],"import React, { useState, useEffect } from 'react';\r\nimport CardView from './CardView';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Search(){\r\n    const [data, setData] = useState([]),\r\n    [isLoading, setLoading] = useState(false),\r\n    txtSearch = new URLSearchParams(useLocation().search).get('q');\r\n\r\n    const fetchData = async() => {\r\n        if (txtSearch) {\r\n            setLoading(true);\r\n            let dData = await axios.get(`https://images-api.nasa.gov/search?q=${txtSearch}&media_type=image`);\r\n\r\n            const parsedData = dData.data.collection.items.map (m => {\r\n                const imgID = m.href.slice('https://images-assets.nasa.gov/image/'.length, m.href.length-16);\r\n                return ({\r\n                    url: `https://images-assets.nasa.gov/image/${imgID}/${imgID}~thumb.jpg`,\r\n                    title: m.data[0].title,\r\n                    explanation: m.data[0].description\r\n                })\r\n            });\r\n            setData(parsedData);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => { fetchData(); }, [txtSearch]);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                isLoading ? <LoadingSpinner />\r\n                : data.length === 0 ? <h2>No results found!</h2>\r\n                : data.map(m => <CardView key={Math.random()} data={m} />)\r\n            }\r\n        </Grid>\r\n    )\r\n}","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\Favorite.js",["60"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardView from './CardView';\r\nimport LoadingSpinner from './LoadingSpinner';\r\nimport axios from 'axios';\r\nimport utils from '../utils';\r\n\r\nexport default function Favorite(props) {\r\n    const [data, setData] = useState([]),\r\n    [isLoading, setLoading] = useState(true);\r\n\r\n    const fetchData = async() => {\r\n        const id = props.match.params.id\r\n        const dData = await axios.get(`${utils.FULL_URL}/image/${id}`);\r\n        setData(dData.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => { fetchData(); }, []);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        {\r\n            isLoading ? <LoadingSpinner />\r\n            : data.length === 0 ? <h2>No results found!</h2>\r\n            : <CardView data={data} />\r\n        }\r\n        </Grid>\r\n    )\r\n}","D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\CardView.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\SnackBar.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\components\\LoadingSpinner.js",[],"D:\\Elevation-Bootcamp\\home\\code\\bootcamp\\week-9\\nasa-app\\src\\utils.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":31,"column":39,"nodeType":"67","endLine":31,"endColumn":50,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"66","line":19,"column":39,"nodeType":"67","endLine":19,"endColumn":41,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["72"],["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [fetchData, txtSearch]",{"range":"78","text":"79"},"Update the dependencies array to be: [fetchData]",{"range":"80","text":"81"},[1230,1241],"[fetchData, txtSearch]",[633,635],"[fetchData]"]